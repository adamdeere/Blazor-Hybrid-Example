@using BlazorHybridMessAround.Components.Cards.GoT
@using BlazorHybridMessAround.Components.Views.GoT
@using BlazorHybridMessAround.Models.GoT
@using BlazorHybridMessAround.ViewModels.GoT

@inject GotBooksViewModel GotBooksData;

<TelerikRootComponent>
    <div>
        <TelerikLoaderContainer OverlayThemeColor="light" ThemeColor="primary" Visible="@IsLoading" LoaderType="@LoaderType.InfiniteSpinner" />
        <TelerikListView Data="@GotBooksData.Books" 
                         Width="100%" 
                         Pageable="false">
            <HeaderTemplate>
                Top European destinations
            </HeaderTemplate>
            <Template>
                <div @onclick="@( _ => SelectItem(context) )">
                    <GotBooksCard BooksModel=@context  />
                </div>
            </Template>
           
        </TelerikListView>
    </div>
</TelerikRootComponent>

@code {
    private bool IsLoading { get; set; }

    private async void SelectItem(GotBooks BookItem)
    {
        var navigationParameter = new ShellNavigationQueryParameters
        {
            { "BookItem", BookItem }
        };

        await Shell.Current.GoToAsync($"{nameof(BookDetailPage)}", navigationParameter);
    }

    protected async override void OnInitialized()
    {
        IsLoading = true;
        base.OnInitialized();

        await GotBooksData.OnInitailise();
        IsLoading = false;

        await InvokeAsync(StateHasChanged);

    }
}
